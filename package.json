{
  "name": "serverless-template",
  "version": "1.0.0",
  "license": "MIT",
  "private": true,
  "scripts": {
    "nx": "nx",
    "build": "nx build",
    "deploy:dev": "nx deploy-dev",
    "deploy:stage": "nx deploy-stage",
    "deploy:prod": "nx deploy-prod",
    "remove:dev": "nx remove-dev",
    "remove:stage": "nx remove-stage",
    "remove:prod": "nx remove-prod",
    "analyze": "nx analyze",
    "serve": "nx serve",
    "test": "nx test",
    "lint": "nx workspace-lint && nx lint",
    "e2e": "nx e2e",
    "dep-graph": "nx dep-graph",
    "infrastructure:build": "docker compose up -d",
    "infrastructure:remove": "docker compose down",
    "infrastructure:start": "docker compose start",
    "infrastructure:stop": "docker compose stop",
    "services:affected": "nx affected:apps",
    "libs:affected": "nx affected:libs",
    "build:affected": "nx affected:build",
    "e2e:affected": "nx affected:e2e",
    "test:affected": "nx affected:test",
    "lint:affected": "nx affected:lint",
    "dep-graph:affected": "nx affected:dep-graph",
    "affected": "nx affected",
    "build:all": "nx run-many --target=build --all",
    "deploy:all:dev": "nx run-many --target=deploy-dev --all",
    "deploy:all:stage": "nx run-many --target=deploy-stage --all",
    "deploy:all:prod": "nx run-many --target=deploy-prod --all",
    "remove:all:dev": "nx run-many --target=remove-dev --all",
    "remove:all:stage": "nx run-many --target=remove-stage --all",
    "remove:all:prod": "nx run-many --target=remove-prod --all",
    "test:all": "nx run-many --target=test --all",
    "lint:all": "nx run-many --target=lint --all",
    "help": "nx help",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "prepare": "husky install",
    "codegen": "nx codegen",
    "console": "nx console",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator"
  },
  "dependencies": {
    "@aws-sdk/client-lambda": "^3.131.0",
    "@aws-sdk/client-sqs": "^3.137.0",
    "@graphql-tools/merge": "^8.3.1",
    "apollo-server-lambda": "^3.10.0",
    "graphql": "^16.5.0",
    "tslib": "^2.4.0"
  },
  "devDependencies": {
    "@aws-sdk/types": "^3.78.0",
    "@babel/generator": "^7.18.7",
    "@babel/parser": "^7.18.8",
    "@babel/types": "^7.18.8",
    "@graphql-codegen/cli": "^2.11.3",
    "@graphql-codegen/introspection": "^2.1.1",
    "@graphql-codegen/schema-ast": "^2.4.1",
    "@graphql-codegen/typescript": "^2.7.2",
    "@graphql-codegen/typescript-operations": "^2.5.2",
    "@graphql-codegen/typescript-resolvers": "^2.7.2",
    "@jest/transform": "^28.1.3",
    "@nrwl/cli": "14.1.5",
    "@nrwl/devkit": "14.1.5",
    "@nrwl/eslint-plugin-nx": "14.1.5",
    "@nrwl/jest": "14.1.5",
    "@nrwl/linter": "14.1.5",
    "@nrwl/node": "14.1.5",
    "@nrwl/workspace": "14.1.5",
    "@types/aws-lambda": "^8.10.101",
    "@types/jest": "27.4.1",
    "@types/node": "^18.6.3",
    "@types/serverless": "^3.12.7",
    "@typescript-eslint/eslint-plugin": "5.30.6",
    "@typescript-eslint/parser": "5.18.0",
    "aws-sdk-client-mock": "^0.6.2",
    "esbuild": "^0.14.49",
    "esbuild-visualizer": "^0.3.1",
    "eslint": "8.20.0",
    "eslint-config-prettier": "^8.5.0",
    "graphql-schema-linter": "^3.0.1",
    "husky": "^8.0.1",
    "jest": "27.5.1",
    "lint-staged": "^13.0.3",
    "nx": "14.1.5",
    "prettier": "^2.7.1",
    "serverless": "^3.21.0",
    "serverless-analyze-bundle-plugin": "^1.2.0",
    "serverless-esbuild": "^1.32.5",
    "serverless-offline": "^8.8.1",
    "serverless-offline-sqs": "^6.0.0",
    "ts-jest": "27.1.4",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.8.0",
    "tsconfig-paths": "^4.0.0",
    "typescript": "^4.6.4"
  },
  "engines": {
    "node": ">=16 <17"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{md,json,yml,yaml,html}": [
      "prettier --write"
    ],
    "*.graphql": [
      "graphql-schema-linter src/**/*.graphql"
    ]
  },
  "graphql-schema-linter": {
    "rules": [
      "deprecations-have-a-reason",
      "descriptions-are-capitalized",
      "enum-values-all-caps",
      "enum-values-have-descriptions",
      "enum-values-sorted-alphabetically",
      "fields-are-camel-cased",
      "fields-have-descriptions",
      "input-object-fields-sorted-alphabetically",
      "input-object-values-are-camel-cased",
      "input-object-values-have-descriptions",
      "type-fields-sorted-alphabetically",
      "types-are-capitalized",
      "types-have-descriptions"
    ],
    "ignore": {
      "types-have-descriptions": [
        "Query",
        "Mutation",
        "Subscription"
      ]
    }
  }
}
